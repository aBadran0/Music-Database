
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.*;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SwingConstants;
import java.awt.Component;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JCheckBox;
/**
 *
 * @author mihir
 */
public class ViewUpdateGenre extends javax.swing.JFrame {

    /**
     * Creates new form AddNewDept
     */
    myDBCon dbCon;
    ResultSet rs1;
    ResultSet rs2;
    ResultSet rs3;
    int gid = 0;
    boolean checkbx = false;
    
    public ViewUpdateGenre() {
        initComponents();
        this.setLocationRelativeTo(null);
        lblNameError.setVisible(false);
        dbCon = new myDBCon();
        this.getNewData();
        populateFields();
    }
    private void getNewData() {

        try {
        
            // populate fields
            rs1 = dbCon.executeStatement("SELECT * FROM Genres  ");         
            rs1.beforeFirst();
            rs1.first();
            String query = "SELECT g.genreid, g.name AS genrename, COUNT(s.genreid) AS song_count " +
                    "FROM genres g " +
                    "LEFT JOIN songs s ON g.genreid = s.genreid " +
                    "GROUP BY g.genreid, g.name";  
            rs2 = dbCon.executeStatement(query);
            rs2.beforeFirst();
            rs2.first();
            
            

        }        
            catch (SQLException e) {
            javax.swing.JLabel label = new javax.swing.JLabel("SQL Error - Display selected genre.");
            e.printStackTrace();
            label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
            JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    private void populateFields() {
        try {
        	System.out.println(rs2.getMetaData().toString());
        	
            gid = rs2.getInt("genreid");
            txtName.setText(rs2.getString("genrename")); 
            txtCount.setText(rs2.getString("song_count"));

            EnableDisableButtons();
        } catch (SQLException ex) {
            Logger.getLogger(ViewUpdateGenre.class.getName()).log(Level.SEVERE, null, ex);
              }
    }
    
    private void MoveNext() {
        try {
            // TODO add your handling code here:
            if (!rs1.isLast()) {
                rs1.next();
                rs2.next();
                populateFields();
            }
        } catch (SQLException ex) {
            Logger.getLogger(ViewUpdateGenre.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void MovePrevious() {
        try {
            // TODO add your handling code here:
            if (!rs1.isFirst()) {
                rs1.previous();
                rs2.previous();

                populateFields();
            }
        } catch (SQLException ex) {
            Logger.getLogger(ViewUpdateGenre.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void EnableDisableButtons() {
        try {
            if (rs1.isFirst()) {
                btnPrevious.setEnabled(false);
            } else {
                btnPrevious.setEnabled(true);
            }
            if (rs1.isLast()) {
                btnNext.setEnabled(false);
            } else {
                btnNext.setEnabled(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ViewUpdateGenre.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblSongCount = new javax.swing.JLabel();
        txtCount = new javax.swing.JTextField();
        txtCount.setEditable(false);
        lblNameError = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnUpdateUser = new javax.swing.JButton();
        JCheckBox chkEdit = new JCheckBox("Edit Genre");


        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Modify Genre");

        lblSongCount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSongCount.setText("Number of Songs:");

        txtCount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoActionPerformed(evt);
            }
        });

        lblNameError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblNameError.setForeground(new java.awt.Color(255, 0, 0));
        lblNameError.setText("error label");

        lblName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblName.setText("Genre:");

        txtName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Forte", 0, 24)); // NOI18N
        btnNext.setText("Next >>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setFont(new java.awt.Font("Forte", 0, 24)); // NOI18N
        btnPrevious.setText("<< Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnUpdateUser.setFont(new java.awt.Font("Forte", 0, 24)); // NOI18N
        btnUpdateUser.setText("Update");
        btnUpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateUserActionPerformed(evt);
            }
        });
        chkEdit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chkEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkEditActionPerformed(evt);
            }
        });
        

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(190)
        			.addComponent(jLabel1)
        			.addContainerGap(224, Short.MAX_VALUE))
        		.addGroup(layout.createSequentialGroup()
        			.addGap(16)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(lblName)
        						.addComponent(lblSongCount))
        					.addPreferredGap(ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(txtCount, GroupLayout.PREFERRED_SIZE, 221, GroupLayout.PREFERRED_SIZE)
        						.addComponent(txtName, GroupLayout.PREFERRED_SIZE, 221, GroupLayout.PREFERRED_SIZE)))
        				.addGroup(layout.createSequentialGroup()
        					.addGap(34)
        					.addComponent(btnPrevious)
        					.addGap(52)
        					.addComponent(btnUpdateUser)))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(lblNameError, GroupLayout.PREFERRED_SIZE, 93, GroupLayout.PREFERRED_SIZE)
        				.addComponent(btnNext))
        			.addGap(89))
        		.addGroup(layout.createSequentialGroup()
        			.addGap(273)
        			.addComponent(chkEdit)
        			.addContainerGap(294, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jLabel1)
        			.addGap(28)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblNameError)
        				.addComponent(lblName, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(lblSongCount)
        				.addComponent(txtCount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(chkEdit)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(btnUpdateUser)
        				.addComponent(btnPrevious)
        				.addComponent(btnNext))
        			.addContainerGap(15, Short.MAX_VALUE))
        );
        layout.linkSize(SwingConstants.VERTICAL, new Component[] {lblSongCount, txtCount, lblNameError});
        layout.linkSize(SwingConstants.HORIZONTAL, new Component[] {txtCount, txtName});
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>                        

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        MoveNext();
    }                                       

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        MovePrevious();
    }                                           
   void clearErrorLabels(){
       lblNameError.setText("");
       lblNameError.setVisible(false);
       
   }
   
   
    boolean isValidData(){
        clearErrorLabels();
        boolean result = true;
        if (txtName.getText().isEmpty() || (txtName.getText().length() > 50)) {
            if (txtName.getText().isEmpty()) {
                lblNameError.setText("Invalid. Genre name cannot be empty.");
            } else if (txtName.getText().trim().length() > 50) {
            	lblNameError.setText("Invalid. Genre name must be shorter than 50 characters.");
            }
            lblNameError.setVisible(true);
            result = false;
        	}
         

        return result;    
        
    }
    private void btnUpdateUserActionPerformed(java.awt.event.ActionEvent evt) {                                              
    try {
            
 if (isValidData() && checkbx == true) {
       	int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to rename the Genre", "Confirm Operation", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.NO_OPTION) 
        		{
                    return;
                }
        
                boolean isduplicate = false;
                String namechk = txtName.getText();
                String dupecheck = "SELECT name FROM genre where name = '" + namechk +"'";
                
                rs3 = dbCon.executeStatement(dupecheck);
                // isBeforeFirst() returns false if there are no data in the resultset
                isduplicate = rs3.isBeforeFirst();   
                
                if (isduplicate == false)
                	
                { 
                	String prepSQL1 = "UPDATE genre SET name = "
                        + "'" + txtName.getText()                  
                        + "' WHERE genreid = " + gid +""  ;
                		int result1 = dbCon.executePrepared(prepSQL1);
                          
                
                		if (result1 > 0){
                			javax.swing.JLabel label = new javax.swing.JLabel("Genre " + txtName.getText() + " updated successfully.");
                			label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                			JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                			getNewData();
                			}
                }
                
                else {
                    javax.swing.JLabel label = new javax.swing.JLabel("Genre already exists.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.INFORMATION_MESSAGE);
                   
                }
                
                
            }
 		else {
                javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);

            }

        } catch (SQLException e) {

            JOptionPane.showMessageDialog(null, "Error updating genre." + e.getMessage());

        }
    }                                             

    private void txtNoActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }
    private void chkEditActionPerformed(java.awt.event.ActionEvent evt) {                                         
            checkbx = !checkbx;
            txtName.setEditable(checkbx);            
    }                                        
    
    private javax.swing.JCheckBox chkEdit;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnUpdateUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblSongCount;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNameError;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtCount;
}
